{
  "keys": {},
  "groups": {
    "mainwindow": {
      "keys": {
        "geometry": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'01d9d0cb0003000000000048000004530000077f0000086f00000048000004780000077f0000086f0000000000000000078000000048000004780000077f0000086f')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "     H S   o H x   o      H x   o"
        },
        "state": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000000fd000000010000000300000738000003ccfc0100000004fc000000000000056a0000000000fffffffc0200000002fb00000058007200710074005f007000750062006c00690073006800650072005f005f005000750062006c00690073006800650072005f005f0031005f005f005000750062006c006900730068006500720057006900640067006500740100000016000002c40000000000000000fb00000044007200710074005f00670072006100700068005f005f0052006f007300470072006100700068005f005f0031005f005f0052006f0073004700720061007000680055006901000001e5000001fd0000000000000000fb00000046004d0075006c007400690070006c006f00740050006c007500670069006e005f005f0031005f005f004d0075006c007400690070006c006f007400570069006400670065007401000000000000056a0000000000000000fc000000000000035a0000013f00fffffffc0200000002fb00000042007200710074005f0070006c006f0074005f005f0050006c006f0074005f005f0031005f005f00440061007400610050006c006f00740057006900640067006500740100000016000001f10000008a00fffffffb00000042007200710074005f0070006c006f0074005f005f0050006c006f0074005f005f0032005f005f00440061007400610050006c006f0074005700690064006700650074010000020d000001d50000008a00fffffffc00000360000003d80000013f00fffffffc0200000002fb00000042007200710074005f0070006c006f0074005f005f0050006c006f0074005f005f0033005f005f00440061007400610050006c006f00740057006900640067006500740100000016000001ef0000008a00fffffffb00000042007200710074005f0070006c006f0074005f005f0050006c006f0074005f005f0034005f005f00440061007400610050006c006f0074005700690064006700650074010000020b000001d70000008a00ffffff000007380000000000000004000000040000000800000008fc00000001000000030000000100000036004d0069006e0069006d0069007a006500640044006f0063006b00570069006400670065007400730054006f006f006c0062006100720000000000ffffffff0000000000000000')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "                   j                                                                                                                                                    j                 Brqt_plot__Plot__1__DataPlotWidget          Brqt_plot__Plot__2__DataPlotWidget          `   ?                                                                                              8                                                      "
        }
      },
      "groups": {
        "toolbar_areas": {
          "keys": {
            "MinimizedDockWidgetsToolbar": {
              "repr": "8",
              "type": "repr"
            }
          },
          "groups": {}
        }
      }
    },
    "pluginmanager": {
      "keys": {
        "running-plugins": {
          "repr": "{'rqt_plot/Plot': [1, 2, 3, 4]}",
          "type": "repr"
        }
      },
      "groups": {
        "plugin__MultiplotPlugin__1": {
          "keys": {},
          "groups": {
            "dock_widget__MultiplotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Multiplot - [file:///home/papaveneti/TaskWs/src/leg_control/rqt_perspectives/TrajectoryMultiPlot.xml]'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {},
              "groups": {
                "history": {
                  "keys": {
                    "max_length": {
                      "repr": "'10'",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                }
              }
            }
          }
        },
        "plugin__rqt_console__Console__1": {
          "keys": {},
          "groups": {
            "dock_widget__ConsoleWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Console'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "exclude_filters": {
                  "repr": "'severity'",
                  "type": "repr"
                },
                "filter_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000072000000720100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       r r     "
                },
                "highlight_filters": {
                  "repr": "'message'",
                  "type": "repr"
                },
                "message_limit": {
                  "repr": "'20000'",
                  "type": "repr"
                },
                "paused": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "settings_exist": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "show_highlighted_only": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "table_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000046000000ed0100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       F       "
                }
              },
              "groups": {
                "exclude_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "'false'",
                      "type": "repr"
                    },
                    "itemlist": {
                      "repr": "''",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                },
                "highlight_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "'false'",
                      "type": "repr"
                    },
                    "regex": {
                      "repr": "'false'",
                      "type": "repr"
                    },
                    "text": {
                      "repr": "''",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                }
              }
            }
          }
        },
        "plugin__rqt_graph__RosGraph__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosGraphUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Node Graph'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "actionlib_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "auto_fit_graph_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "dead_sinks_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "filter_line_edit_text": {
                  "repr": "''",
                  "type": "repr"
                },
                "graph_type_combo_box_index": {
                  "repr": "'0'",
                  "type": "repr"
                },
                "group_image_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "group_tf_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "hide_dynamic_reconfigure_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "hide_tf_nodes_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "leaf_topics_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "namespace_cluster_spin_box_value": {
                  "repr": "'1'",
                  "type": "repr"
                },
                "quiet_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "topic_filter_line_edit_text": {
                  "repr": "''",
                  "type": "repr"
                },
                "unreachable_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_plot__Plot__1": {
          "keys": {},
          "groups": {
            "dock_widget__DataPlotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Plot'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "autoscroll": {
                  "repr": "True",
                  "type": "repr"
                },
                "plot_type": {
                  "repr": "1",
                  "type": "repr"
                },
                "topics": {
                  "repr": "['/leg_mpc_status/status', '/controller_current_phase/phase', '/controller_current_phase/error', '/body_mpc_status/status', '/controller_current_phase/mode']",
                  "type": "repr"
                },
                "x_limits": {
                  "repr": "[31.31097435951233, 41.31097435951233]",
                  "type": "repr"
                },
                "y_limits": {
                  "repr": "[-1.25, 29.525]",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_plot__Plot__2": {
          "keys": {},
          "groups": {
            "dock_widget__DataPlotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'MatPlot (2)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "autoscroll": {
                  "repr": "True",
                  "type": "repr"
                },
                "plot_type": {
                  "repr": "1",
                  "type": "repr"
                },
                "topics": {
                  "repr": "['/leg_mpc_status/solution_time', '/body_mpc_status/solution_time']",
                  "type": "repr"
                },
                "x_limits": {
                  "repr": "[31.141498804092407, 41.14149880409241]",
                  "type": "repr"
                },
                "y_limits": {
                  "repr": "[0.0, 927.034]",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_plot__Plot__3": {
          "keys": {},
          "groups": {
            "dock_widget__DataPlotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'MatPlot (3)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "autoscroll": {
                  "repr": "True",
                  "type": "repr"
                },
                "plot_type": {
                  "repr": "1",
                  "type": "repr"
                },
                "topics": {
                  "repr": "['/olympus/desired_angle/data[0]', '/olympus/z_axis_angle/vector/z']",
                  "type": "repr"
                },
                "x_limits": {
                  "repr": "[76.91191458702087, 86.91191458702087]",
                  "type": "repr"
                },
                "y_limits": {
                  "repr": "[-180.0, 180.0]",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_plot__Plot__4": {
          "keys": {},
          "groups": {
            "dock_widget__DataPlotWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'MatPlot (4)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "autoscroll": {
                  "repr": "True",
                  "type": "repr"
                },
                "plot_type": {
                  "repr": "1",
                  "type": "repr"
                },
                "topics": {
                  "repr": "['/leg2_node/motor_statuses/statuses[0]/torque', '/leg2_node/motor_statuses/statuses[1]/torque', '/leg2_node/motor_statuses/statuses[2]/torque']",
                  "type": "repr"
                },
                "x_limits": {
                  "repr": "[76.78912210464478, 86.78912210464478]",
                  "type": "repr"
                },
                "y_limits": {
                  "repr": "[-3.068009614944458, 3.0]",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_publisher__Publisher__1": {
          "keys": {},
          "groups": {
            "dock_widget__PublisherWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Message Publisher'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "publishers": {
                  "repr": "'[]'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_reconfigure__Param__1": {
          "keys": {},
          "groups": {
            "dock_widget___plugincontainer_top_widget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Dynamic Reconfigure'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000001000000020000013c000000c00100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       <       "
                },
                "expanded_nodes": {
                  "repr": "None",
                  "type": "repr"
                },
                "selected_nodes": {
                  "repr": "None",
                  "type": "repr"
                },
                "splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000260000000ca01ffffffff010000000100')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       `       "
                },
                "text": {
                  "repr": "''",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_reconfigure__Param__2": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000001000000020000012c000000640100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       , d     "
                },
                "expanded_nodes": {
                  "repr": "None",
                  "type": "repr"
                },
                "selected_nodes": {
                  "repr": "None",
                  "type": "repr"
                },
                "splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff0000000100000002000000ae0000006401ffffffff010000000100')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "         d     "
                },
                "text": {
                  "repr": "''",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_robot_steering__RobotSteering__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "topic": {
                  "repr": "'/cmd_vel'",
                  "type": "repr"
                },
                "vw_max": {
                  "repr": "'3'",
                  "type": "repr"
                },
                "vw_min": {
                  "repr": "'-3'",
                  "type": "repr"
                },
                "vx_max": {
                  "repr": "'1'",
                  "type": "repr"
                },
                "vx_min": {
                  "repr": "'-1'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_rviz__RViz__1": {
          "keys": {},
          "groups": {
            "dock_widget__": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'config1.rviz[*] - RViz'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "hide_menu": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "rviz_config_file": {
                  "repr": "'/home/papaveneti/TaskWs/src/leg_control/rvizConfigs/config1.rviz'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_service_caller__ServiceCaller__1": {
          "keys": {},
          "groups": {
            "dock_widget__ServiceCallerWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Service Caller'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "current_service_name": {
                  "repr": "'/rosout/get_loggers'",
                  "type": "repr"
                },
                "splitter_orientation": {
                  "repr": "'1'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_service_caller__ServiceCaller__2": {
          "keys": {},
          "groups": {
            "dock_widget__ServiceCallerWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Service Caller (2)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "current_service_name": {
                  "repr": "'/Controller_placeholder/get_loggers'",
                  "type": "repr"
                },
                "splitter_orientation": {
                  "repr": "'1'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_tf_tree__RosTfTree__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosTfTreeUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'TF Tree'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "auto_fit_graph_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_topic__TopicPlugin__1": {
          "keys": {},
          "groups": {
            "dock_widget__TopicWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Topic Monitor'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "tree_widget_header_state": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff0000000000000001000000000000000001000000000000000000000000000000000000031e000000050101000100000000000000000500000064ffffffff000000810000000300000005000000d80000000100000003000001410000000100000003000000680000000100000003000000390000000100000003000000640000000100000003000003e80000000064')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "                              d               A     h     9     d        "
                }
              },
              "groups": {}
            }
          }
        }
      }
    }
  }
}